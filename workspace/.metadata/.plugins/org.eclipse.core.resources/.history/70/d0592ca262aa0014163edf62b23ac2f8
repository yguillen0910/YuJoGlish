package com.tesisyux.realidadaumentada;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

public class DataBaseManager {

	
	public static final String TABLE_NAME = "respuesta";
	
	
	public static final String CN_ID ="idRespuesta";
	public static final String CN_Respuesta = "respuesta";
	public static final String CN_Posicion = "posicion";

	
	public static final String CREATE_TABLE = "create table " + TABLE_NAME +" ("
			+ CN_ID + " integer primary key autoincrement,"
			+ CN_Respuesta + " text not null,"
			+ CN_Posicion + "integer not null);";
	
	private DataBaseHelper helper;
	private SQLiteDatabase db;
	
	public DataBaseManager(Context context){
		
		helper = new DataBaseHelper(context);
		db = helper.getWritableDatabase();
	}
	
	public ContentValues generarContentValues(String respuesta, int posicion) {
		ContentValues valores = new ContentValues();
		valores.put(CN_Respuesta, respuesta);
		valores.put(CN_Posicion, posicion);
		
		return valores;
		
	}
	
	public void insertar(String respuesta, int posicion){
		//en el null tiene que ir los campos que pueden se null en la tabla
		db.insert(TABLE_NAME, null, generarContentValues(respuesta,posicion));
		
	}
	
	public void eliminar(String nombre){
		
		db.delete(TABLE_NAME, CN_Respuesta+"=?", new String[] {nombre});
	}
	
	public void eliminarMultiple (String nom1, String nom2){
		
		db.delete(TABLE_NAME, CN_Respuesta+"IN (?,?)", new String[] {nom1,nom2});
	}
	
	public void actualizarNombre (String nombre, String nuevoNombre){
		ContentValues valores = new ContentValues();
		valores.put(CN_Respuesta, nuevoNombre);
		db.update(TABLE_NAME, valores, CN_Respuesta+"=?", new String[] {nombre});
	}
	
	public Cursor cargarCursorRepuesta(){
		
		String columnas[] ={CN_ID,CN_Respuesta};
 		
		return db.query(TABLE_NAME,columnas, null, null, null, null, null);
	}
	
	public Cursor buscarRepuesta(String respuesta){
		
		String [] columnas = new String [] {CN_ID,CN_Respuesta};
 		
		return db.query(TABLE_NAME, columnas, CN_Respuesta + "=?",new String[] {respuesta}, null, null, null);
	}
	
public Cursor buscarRepuestaPorPosicion(String posicion){
		
		String [] columnas = new String [] {CN_Respuesta};
 		
		return db.query(TABLE_NAME, columnas, CN_Posicion + "=?",new String[] {posicion}, null, null, null);
	}
	
}
